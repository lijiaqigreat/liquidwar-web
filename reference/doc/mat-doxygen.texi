

  
@deftp {Struct} {lw6mat_dmat2_t}

    
Double 2x2 matrix (AKA 2D rectangle).     
@end deftp

@defcv {Member} {lw6mat_dmat2_t} {m}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dmat2_t::m[LW6MAT_MAT2_M_SIZE][LW6MAT_MAT2_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_dmat2_t} {v}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dmat2_t::v[LW6MAT_MAT2_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*2+j.         
@end defcv



  
@deftp {Struct} {lw6mat_dmat3_t}

    
Double 3x3 matrix (AKA 3D triangle).     
@end deftp

@defcv {Member} {lw6mat_dmat3_t} {m}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dmat3_t::m[LW6MAT_MAT3_M_SIZE][LW6MAT_MAT3_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_dmat3_t} {v}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dmat3_t::v[LW6MAT_MAT3_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*3+j.         
@end defcv



  
@deftp {Struct} {lw6mat_dmat4_t}

    
Double 4x4 matrix (AKA 3D transformation/composition matrix).     
@end deftp

@defcv {Member} {lw6mat_dmat4_t} {m}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dmat4_t::m[LW6MAT_MAT4_M_SIZE][LW6MAT_MAT4_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_dmat4_t} {v}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dmat4_t::v[LW6MAT_MAT4_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*4+j.         
@end defcv



  
@deftp {Struct} {lw6mat_dvec2_t}

    
Double vector with 2 elements (AKA 2D point).     
@end deftp

@defcv {Member} {lw6mat_dvec2_t} {x}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec2_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec2_t} {y}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec2_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec2_t} {p}
@strong{Type:} @code{struct lw6mat_dvec2_t::16}

@strong{Definition:} @code{struct lw6mat_dvec2_t::16  lw6mat_dvec2_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_dvec2_t} {s}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec2_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec2_t} {t}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec2_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec2_t} {t}
@strong{Type:} @code{struct lw6mat_dvec2_t::17}

@strong{Definition:} @code{struct lw6mat_dvec2_t::17  lw6mat_dvec2_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_dvec2_t} {v}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec2_t::v[LW6MAT_VEC2_V_SIZE]}


Accessor with array index.         
        
@end defcv



  
@deftp {Struct} {lw6mat_dvec3_t}

    
Double vector with 3 elements (AKA 3D point).     
@end deftp

@defcv {Member} {lw6mat_dvec3_t} {x}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {y}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {z}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::z}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {p}
@strong{Type:} @code{struct lw6mat_dvec3_t::18}

@strong{Definition:} @code{struct lw6mat_dvec3_t::18  lw6mat_dvec3_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {r}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::r}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {g}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::g}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {b}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::b}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {c}
@strong{Type:} @code{struct lw6mat_dvec3_t::19}

@strong{Definition:} @code{struct lw6mat_dvec3_t::19  lw6mat_dvec3_t::c}


Accessor with color-like name.         
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {s}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {t}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {p}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::p}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {t}
@strong{Type:} @code{struct lw6mat_dvec3_t::20}

@strong{Definition:} @code{struct lw6mat_dvec3_t::20  lw6mat_dvec3_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {v}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec3_t::v[LW6MAT_VEC3_V_SIZE]}


Accessor with array index.         
        
@end defcv

@defcv {Member} {lw6mat_dvec3_t} {v2}
@strong{Type:} @code{lw6mat_dvec2_t}

@strong{Definition:} @code{lw6mat_dvec2_t lw6mat_dvec3_t::v2}


Accessor with smaller-sized vector, only 2 dimensions.         
        
@end defcv



  
@deftp {Struct} {lw6mat_dvec4_t}

    
Double vector with 4 elements (AKA quaternion).     
@end deftp

@defcv {Member} {lw6mat_dvec4_t} {x}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {y}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {z}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::z}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {w}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::w}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {p}
@strong{Type:} @code{struct lw6mat_dvec4_t::21}

@strong{Definition:} @code{struct lw6mat_dvec4_t::21  lw6mat_dvec4_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {r}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::r}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {g}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::g}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {b}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::b}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {a}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::a}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {c}
@strong{Type:} @code{struct lw6mat_dvec4_t::22}

@strong{Definition:} @code{struct lw6mat_dvec4_t::22  lw6mat_dvec4_t::c}


Accessor with color-like name.         
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {s}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {t}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {p}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::p}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {q}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::q}


        
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {t}
@strong{Type:} @code{struct lw6mat_dvec4_t::23}

@strong{Definition:} @code{struct lw6mat_dvec4_t::23  lw6mat_dvec4_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {v}
@strong{Type:} @code{double}

@strong{Definition:} @code{double lw6mat_dvec4_t::v[LW6MAT_VEC4_V_SIZE]}


Accessor with array index.         
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {v2}
@strong{Type:} @code{lw6mat_dvec2_t}

@strong{Definition:} @code{lw6mat_dvec2_t lw6mat_dvec4_t::v2}


Accessor with smaller-sized vector, only 2 dimensions.         
        
@end defcv

@defcv {Member} {lw6mat_dvec4_t} {v3}
@strong{Type:} @code{lw6mat_dvec3_t}

@strong{Definition:} @code{lw6mat_dvec3_t lw6mat_dvec4_t::v3}


Accessor with smaller-sized vector, only 3 dimensions.         
        
@end defcv



  
@deftp {Struct} {lw6mat_fmat2_t}

    
Float 2x2 matrix (AKA 2D rectangle).     
@end deftp

@defcv {Member} {lw6mat_fmat2_t} {m}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fmat2_t::m[LW6MAT_MAT2_M_SIZE][LW6MAT_MAT2_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_fmat2_t} {v}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fmat2_t::v[LW6MAT_MAT2_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*4+j.         
@end defcv



  
@deftp {Struct} {lw6mat_fmat3_t}

    
Float 3x3 matrix (AKA 3D triangle).     
@end deftp

@defcv {Member} {lw6mat_fmat3_t} {m}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fmat3_t::m[LW6MAT_MAT3_M_SIZE][LW6MAT_MAT3_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_fmat3_t} {v}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fmat3_t::v[LW6MAT_MAT3_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*3+j.         
@end defcv



  
@deftp {Struct} {lw6mat_fmat4_t}

    
Float 4x4 matrix (AKA 3D transformation/composition matrix).     
@end deftp

@defcv {Member} {lw6mat_fmat4_t} {m}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fmat4_t::m[LW6MAT_MAT4_M_SIZE][LW6MAT_MAT4_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_fmat4_t} {v}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fmat4_t::v[LW6MAT_MAT4_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*4+j.         
@end defcv



  
@deftp {Struct} {lw6mat_fvec2_t}

    
Float vector with 2 elements (AKA 2D point).     
@end deftp

@defcv {Member} {lw6mat_fvec2_t} {x}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec2_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec2_t} {y}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec2_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec2_t} {p}
@strong{Type:} @code{struct lw6mat_fvec2_t::0}

@strong{Definition:} @code{struct lw6mat_fvec2_t::0  lw6mat_fvec2_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_fvec2_t} {s}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec2_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec2_t} {t}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec2_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec2_t} {t}
@strong{Type:} @code{struct lw6mat_fvec2_t::1}

@strong{Definition:} @code{struct lw6mat_fvec2_t::1  lw6mat_fvec2_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_fvec2_t} {v}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec2_t::v[LW6MAT_VEC2_V_SIZE]}


Accessor with array index.         
        
@end defcv



  
@deftp {Struct} {lw6mat_fvec3_t}

    
Float vector with 3 elements (AKA 3D point).     
@end deftp

@defcv {Member} {lw6mat_fvec3_t} {x}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {y}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {z}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::z}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {p}
@strong{Type:} @code{struct lw6mat_fvec3_t::2}

@strong{Definition:} @code{struct lw6mat_fvec3_t::2  lw6mat_fvec3_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {r}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::r}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {g}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::g}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {b}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::b}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {c}
@strong{Type:} @code{struct lw6mat_fvec3_t::3}

@strong{Definition:} @code{struct lw6mat_fvec3_t::3  lw6mat_fvec3_t::c}


Accessor with color-like name.         
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {s}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {t}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {p}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::p}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {t}
@strong{Type:} @code{struct lw6mat_fvec3_t::4}

@strong{Definition:} @code{struct lw6mat_fvec3_t::4  lw6mat_fvec3_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {v}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec3_t::v[LW6MAT_VEC3_V_SIZE]}


Accessor with array index.         
        
@end defcv

@defcv {Member} {lw6mat_fvec3_t} {v2}
@strong{Type:} @code{lw6mat_fvec2_t}

@strong{Definition:} @code{lw6mat_fvec2_t lw6mat_fvec3_t::v2}


Accessor with smaller-sized vector, only 2 dimensions.         
        
@end defcv



  
@deftp {Struct} {lw6mat_fvec4_t}

    
Float vector with 4 elements (AKA quaternion).     
@end deftp

@defcv {Member} {lw6mat_fvec4_t} {x}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {y}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {z}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::z}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {w}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::w}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {p}
@strong{Type:} @code{struct lw6mat_fvec4_t::5}

@strong{Definition:} @code{struct lw6mat_fvec4_t::5  lw6mat_fvec4_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {r}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::r}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {g}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::g}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {b}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::b}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {a}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::a}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {c}
@strong{Type:} @code{struct lw6mat_fvec4_t::6}

@strong{Definition:} @code{struct lw6mat_fvec4_t::6  lw6mat_fvec4_t::c}


Accessor with color-like name.         
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {s}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {t}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {p}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::p}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {q}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::q}


        
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {t}
@strong{Type:} @code{struct lw6mat_fvec4_t::7}

@strong{Definition:} @code{struct lw6mat_fvec4_t::7  lw6mat_fvec4_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {v}
@strong{Type:} @code{float}

@strong{Definition:} @code{float lw6mat_fvec4_t::v[LW6MAT_VEC4_V_SIZE]}


Accessor with array index.         
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {v2}
@strong{Type:} @code{lw6mat_fvec2_t}

@strong{Definition:} @code{lw6mat_fvec2_t lw6mat_fvec4_t::v2}


Accessor with smaller-sized vector, only 2 dimensions.         
        
@end defcv

@defcv {Member} {lw6mat_fvec4_t} {v3}
@strong{Type:} @code{lw6mat_fvec3_t}

@strong{Definition:} @code{lw6mat_fvec3_t lw6mat_fvec4_t::v3}


Accessor with smaller-sized vector, only 3 dimensions.         
        
@end defcv



  
@deftp {Struct} {lw6mat_imat2_t}

    
Integer 2x2 matrix (AKA 2D rectangle).     
@end deftp

@defcv {Member} {lw6mat_imat2_t} {m}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_imat2_t::m[LW6MAT_MAT2_M_SIZE][LW6MAT_MAT2_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_imat2_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_imat2_t::v[LW6MAT_MAT2_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*2+j.         
@end defcv



  
@deftp {Struct} {lw6mat_imat3_t}

    
Integer 3x3 matrix (AKA 3D triangle).     
@end deftp

@defcv {Member} {lw6mat_imat3_t} {m}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_imat3_t::m[LW6MAT_MAT3_M_SIZE][LW6MAT_MAT3_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_imat3_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_imat3_t::v[LW6MAT_MAT3_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*3+j.         
@end defcv



  
@deftp {Struct} {lw6mat_imat4_t}

    
Integer 4x4 matrix (AKA 3D transformation/composition matrix).     
@end deftp

@defcv {Member} {lw6mat_imat4_t} {m}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_imat4_t::m[LW6MAT_MAT4_M_SIZE][LW6MAT_MAT4_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_imat4_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_imat4_t::v[LW6MAT_MAT4_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*4+j.         
@end defcv



  
@deftp {Struct} {lw6mat_ivec2_t}

    
Integer vector with 2 elements (AKA 2D point).     
@end deftp

@defcv {Member} {lw6mat_ivec2_t} {x}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec2_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec2_t} {y}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec2_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec2_t} {p}
@strong{Type:} @code{struct lw6mat_ivec2_t::8}

@strong{Definition:} @code{struct lw6mat_ivec2_t::8  lw6mat_ivec2_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_ivec2_t} {s}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec2_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec2_t} {t}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec2_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec2_t} {t}
@strong{Type:} @code{struct lw6mat_ivec2_t::9}

@strong{Definition:} @code{struct lw6mat_ivec2_t::9  lw6mat_ivec2_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_ivec2_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec2_t::v[LW6MAT_VEC2_V_SIZE]}


Accessor with array index.         
        
@end defcv



  
@deftp {Struct} {lw6mat_ivec3_t}

    
Integer vector with 3 elements (AKA 3D point).     
@end deftp

@defcv {Member} {lw6mat_ivec3_t} {x}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {y}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {z}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::z}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {p}
@strong{Type:} @code{struct lw6mat_ivec3_t::10}

@strong{Definition:} @code{struct lw6mat_ivec3_t::10  lw6mat_ivec3_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {r}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::r}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {g}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::g}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {b}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::b}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {c}
@strong{Type:} @code{struct lw6mat_ivec3_t::11}

@strong{Definition:} @code{struct lw6mat_ivec3_t::11  lw6mat_ivec3_t::c}


Accessor with color-like name.         
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {s}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {t}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {p}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::p}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {t}
@strong{Type:} @code{struct lw6mat_ivec3_t::12}

@strong{Definition:} @code{struct lw6mat_ivec3_t::12  lw6mat_ivec3_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_ivec3_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec3_t::v[LW6MAT_VEC3_V_SIZE]}


Accessor with array index.         
        
@end defcv



  
@deftp {Struct} {lw6mat_ivec4_t}

    
Integer vector with 4 elements (AKA quaternion).     
@end deftp

@defcv {Member} {lw6mat_ivec4_t} {x}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {y}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {z}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::z}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {w}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::w}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {p}
@strong{Type:} @code{struct lw6mat_ivec4_t::13}

@strong{Definition:} @code{struct lw6mat_ivec4_t::13  lw6mat_ivec4_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {r}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::r}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {g}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::g}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {b}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::b}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {a}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::a}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {c}
@strong{Type:} @code{struct lw6mat_ivec4_t::14}

@strong{Definition:} @code{struct lw6mat_ivec4_t::14  lw6mat_ivec4_t::c}


Accessor with color-like name.         
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {s}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {t}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {p}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::p}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {q}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::q}


        
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {t}
@strong{Type:} @code{struct lw6mat_ivec4_t::15}

@strong{Definition:} @code{struct lw6mat_ivec4_t::15  lw6mat_ivec4_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_ivec4_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_ivec4_t::v[LW6MAT_VEC4_V_SIZE]}


Accessor with array index.         
        
@end defcv



  
@deftp {Struct} {lw6mat_xmat2_t}

    
Fixed Point 2x2 matrix (AKA 2D rectangle).     
@end deftp

@defcv {Member} {lw6mat_xmat2_t} {m}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xmat2_t::m[LW6MAT_MAT2_M_SIZE][LW6MAT_MAT2_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_xmat2_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xmat2_t::v[LW6MAT_MAT2_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*3+j.         
@end defcv



  
@deftp {Struct} {lw6mat_xmat3_t}

    
Fixed Point 3x3 matrix (AKA 3D triangle).     
@end deftp

@defcv {Member} {lw6mat_xmat3_t} {m}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xmat3_t::m[LW6MAT_MAT3_M_SIZE][LW6MAT_MAT3_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_xmat3_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xmat3_t::v[LW6MAT_MAT3_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*3+j.         
@end defcv



  
@deftp {Struct} {lw6mat_xmat4_t}

    
Fixed Point 4x4 matrix (AKA 3D transformation/composition matrix).     
@end deftp

@defcv {Member} {lw6mat_xmat4_t} {m}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xmat4_t::m[LW6MAT_MAT4_M_SIZE][LW6MAT_MAT4_M_SIZE]}


        
Accessor with 2 dimensions array index. The convention is column-major mode as done in OpenGL so that m[i][j] is element at column i and row j. Beware, this is not the most natural order for a C programmer.         
@end defcv

@defcv {Member} {lw6mat_xmat4_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xmat4_t::v[LW6MAT_MAT4_V_SIZE_X_SIZE]}


        
Accessor with flat array index. To access element a column i and row j, use i*4+j.         
@end defcv



  
@deftp {Struct} {lw6mat_xvec2_t}

    
Fixed Point vector with 2 elements (AKA 2D point).     
@end deftp

@defcv {Member} {lw6mat_xvec2_t} {x}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec2_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec2_t} {y}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec2_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec2_t} {p}
@strong{Type:} @code{struct lw6mat_xvec2_t::24}

@strong{Definition:} @code{struct lw6mat_xvec2_t::24  lw6mat_xvec2_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_xvec2_t} {s}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec2_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec2_t} {t}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec2_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec2_t} {t}
@strong{Type:} @code{struct lw6mat_xvec2_t::25}

@strong{Definition:} @code{struct lw6mat_xvec2_t::25  lw6mat_xvec2_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_xvec2_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec2_t::v[LW6MAT_VEC2_V_SIZE]}


Accessor with array index.         
        
@end defcv



  
@deftp {Struct} {lw6mat_xvec3_t}

    
Fixed Point vector with 3 elements (AKA 3D point).     
@end deftp

@defcv {Member} {lw6mat_xvec3_t} {x}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {y}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {z}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::z}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {p}
@strong{Type:} @code{struct lw6mat_xvec3_t::26}

@strong{Definition:} @code{struct lw6mat_xvec3_t::26  lw6mat_xvec3_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {r}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::r}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {g}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::g}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {b}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::b}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {c}
@strong{Type:} @code{struct lw6mat_xvec3_t::27}

@strong{Definition:} @code{struct lw6mat_xvec3_t::27  lw6mat_xvec3_t::c}


Accessor with color-like name.         
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {s}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {t}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {p}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::p}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {t}
@strong{Type:} @code{struct lw6mat_xvec3_t::28}

@strong{Definition:} @code{struct lw6mat_xvec3_t::28  lw6mat_xvec3_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_xvec3_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec3_t::v[LW6MAT_VEC3_V_SIZE]}


Accessor with array index.         
        
@end defcv



  
@deftp {Struct} {lw6mat_xvec4_t}

    
Fixed Point vector with 4 elements (AKA quaternion).     
@end deftp

@defcv {Member} {lw6mat_xvec4_t} {x}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::x}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {y}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::y}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {z}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::z}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {w}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::w}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {p}
@strong{Type:} @code{struct lw6mat_xvec4_t::29}

@strong{Definition:} @code{struct lw6mat_xvec4_t::29  lw6mat_xvec4_t::p}


Accessor with named/point coords.         
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {r}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::r}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {g}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::g}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {b}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::b}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {a}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::a}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {c}
@strong{Type:} @code{struct lw6mat_xvec4_t::30}

@strong{Definition:} @code{struct lw6mat_xvec4_t::30  lw6mat_xvec4_t::c}


Accessor with color-like name.         
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {s}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::s}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {t}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::t}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {p}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::p}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {q}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::q}


        
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {t}
@strong{Type:} @code{struct lw6mat_xvec4_t::31}

@strong{Definition:} @code{struct lw6mat_xvec4_t::31  lw6mat_xvec4_t::t}


Accessor with texture-like name.         
        
@end defcv

@defcv {Member} {lw6mat_xvec4_t} {v}
@strong{Type:} @code{int32_t}

@strong{Definition:} @code{int32_t lw6mat_xvec4_t::v[LW6MAT_VEC4_V_SIZE]}


Accessor with array index.         
        
@end defcv


